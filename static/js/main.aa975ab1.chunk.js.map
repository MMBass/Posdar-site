{"version":3,"sources":["axios.js","components/Nav/Nav.js","components/Header/Header.js","context/BannerContext.js","components/Banner/Banner.js","pages/SaveTaskForm/SaveTaskForm.js","components/GetTasksForm/GetTasksForm.js","context/LoaderContext.js","components/TaskCard/TaskCard.js","components/Modal/Modal.js","pages/TasksList/TasksList.js","pages/NoMatch/NoMatch.js","App/App.js","reportWebVitals.js","index.js"],"names":["posdarUrlInstance","axios","create","baseURL","headers","Nav","id","to","className","Header","BannerContext","createContext","Banner","useContext","message","setMessage","closeBanner","useEffect","setTimeout","length","style","backgroundColor","onClick","SaveTaskForm","useState","formData","setFormData","wordsList","setWordsList","loaderOpen","setLoaderOpen","setDisab","handleInputs","e","target","name","value","handleWordsList","del","i","newList","splice","text","saveTask","a","preventDefault","post","apiKey","userName","catch","response","handleReset","status","data","Array","from","document","querySelectorAll","forEach","input","onSubmit","placeholder","onChange","required","disabled","map","x","type","visible","color","height","width","timeout","display","marginRight","GetTasksForm","props","formEnd","setFormEnd","getTasks","get","err","setFatherTasks","tasks","window","localStorage","setItem","LoaderContext","TaskCard","LoaderC","setLoaderC","group","t","email","_id","at","getItem","delTask","console","error","Modal","setOpenModal","title","delEnd","TasksList","setTasks","modalOpen","setModalOpen","del_id","setDel_id","deleted","setDeleted","log","removeItem","delStart","delete","task","date","NoMatch","App","first","setFirst","then","res","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aa975ab1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const posdarUrlInstance = axios.create({\r\n    // baseURL: 'https://posdar.herokuapp.com',\r\n    baseURL: 'http://localhost:5000',\r\n    headers: {'X-Custom-Header': 'foobar'}\r\n});","import {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport './Nav.css';\r\n\r\nfunction Nav() {\r\n\r\n    return (\r\n        <nav id=\"Nav\">\r\n                <Link to=\"/\" className=\"links\">Add Task</Link>\r\n                <Link to=\"/list\" className=\"links\">Tasks List</Link>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import './Header.css';\r\nimport Nav from \"../Nav/Nav\";\r\n\r\nfunction Header() {\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Posdar</h1>\r\n      <Nav></Nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import { createContext } from \"react\";\r\n\r\nexport const BannerContext = createContext([\"#D6D8D9\",\"\"]);","import React, { useContext, useEffect } from 'react';\r\nimport './Banner.css';\r\nimport { BannerContext } from \"../../context/BannerContext\";\r\nimport { HiX } from 'react-icons/hi';\r\n\r\nfunction Banner() {\r\n  const { message, setMessage } = useContext(BannerContext);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      closeBanner();\r\n    }, 3000);\r\n  });\r\n\r\n  function closeBanner() {\r\n    setMessage([\"darkgray\", \"\"]);\r\n  }\r\n\r\n  if (message[1].length < 1) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div id=\"Banner\" style={{ backgroundColor: message[0] }}>\r\n      <strong onClick={() => closeBanner()}> <HiX></HiX></strong>\r\n      <p>{message[1]}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;","import { useState, useContext } from 'react';\r\nimport { posdarUrlInstance } from \"../../axios\";\r\nimport { BannerContext } from \"../../context/BannerContext\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport './SaveTaskForm.css';\r\nimport { IoIosSave } from 'react-icons/io';\r\n\r\nfunction SaveTaskForm() {\r\n    const [formData, setFormData] = useState([]);\r\n    const [wordsList, setWordsList] = useState([' ']);\r\n    const [loaderOpen, setLoaderOpen] = useState(false);\r\n    const [disab, setDisab] = useState(false);\r\n    const { message, setMessage } = useContext(BannerContext);\r\n\r\n    const addInput = () => {\r\n        setWordsList([...wordsList, \" \"]);\r\n    };\r\n\r\n    const handleInputs = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const handleWordsList = (del, e, i) => {\r\n        const newList = wordsList;\r\n        if (del) {\r\n            newList.splice(i, 1);\r\n        } else {\r\n            newList[i] = e.target.value;\r\n        }\r\n\r\n        setWordsList(newList);\r\n        setFormData({ ...formData, text: wordsList });\r\n    }\r\n\r\n    const saveTask = async (e) => {\r\n        e.preventDefault();\r\n        setDisab(true);\r\n        setLoaderOpen(true);\r\n        const response = await posdarUrlInstance.post('/register', formData, {\r\n            headers: {\r\n                \"x-api-key\": formData.apiKey,\r\n                \"user-name\": formData.userName\r\n            }\r\n        }).catch(() => {\r\n            setMessage([\"#F8D7DA\", \"Something went wrong\"]);\r\n        });\r\n\r\n        if (response) {\r\n            handleReset();\r\n            if (response.status === 200) {\r\n                setMessage([\"#172B4D\", response.data.message]);\r\n            } else {\r\n                setMessage([\"darkgray\", response.data.message]);\r\n            }\r\n        }\r\n        setLoaderOpen(false);\r\n        setDisab(false);\r\n    }\r\n\r\n    const handleReset = () => {\r\n        Array.from(document.querySelectorAll(\"#saveTasksForm input\")).forEach(\r\n            input => (input.value = \"\")\r\n        );\r\n        setWordsList([' ']);\r\n        setFormData([]);\r\n    };\r\n\r\n    return (\r\n        <form id=\"saveTasksForm\" onSubmit={saveTask}>\r\n            <h2>Add task</h2>\r\n\r\n            <input name=\"userName\" placeholder=\"User name\" onChange={handleInputs} required></input>\r\n\r\n            <input name=\"group\" placeholder=\"Group ID\" onChange={handleInputs} required></input>\r\n\r\n            <input name=\"apiKey\" placeholder=\"Api key\" onChange={handleInputs} required></input>\r\n\r\n            <input name=\"email\" placeholder=\"Email\" onChange={handleInputs} required></input>\r\n\r\n            <input name=\"time\" placeholder=\"Time between requests\" onChange={handleInputs} disabled></input>\r\n\r\n            <h4 className='txt-headers'>What to look for?</h4>\r\n            <p id=\"must\" className='txt-headers'>* accepts letters or numbers</p>\r\n\r\n            {wordsList.map((x, i) => {\r\n                return (\r\n                    <div className=\"txt-inputs\">\r\n                        <input className=\"inp-txt\" id={\"text\" + (i + 1)} name={\"text\" + (i + 1)} onChange={e => handleWordsList(null, e, i)} value={x}>\r\n                        </input>\r\n                        {i > 0 && <input type=\"button\" className=\"inp-remove\" value=\"-\" onClick={e => handleWordsList(true, e, i)}></input>}\r\n                    </div>\r\n                );\r\n            })}\r\n\r\n            <br></br>\r\n            <button id=\"add-text-btn\" type=\"button\" onClick={addInput}>\r\n                <pre>+  Add another text </pre>\r\n            </button>\r\n\r\n            <br></br>\r\n            <button type=\"submit\" id=\"submitButton\" >\r\n                <Loader\r\n                    visible={loaderOpen}\r\n                    type=\"TailSpin\"\r\n                    color=\"#000000\"\r\n                    height={20}\r\n                    width={20}\r\n                    timeout={3000}\r\n                    style={{ display: \"inline\", marginRight: \"12px\" }}\r\n                />\r\n                <IoIosSave />\r\n            </button>\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\nexport default SaveTaskForm;","import { useState, useContext } from 'react';\r\nimport { posdarUrlInstance } from \"../../axios\";\r\nimport { BannerContext } from \"../../context/BannerContext\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport './GetTasksForm.css';\r\n\r\nfunction GetTasksForm(props) {\r\n    const [formData, setFormData] = useState([]);\r\n    const [formEnd, setFormEnd] = useState(false);\r\n    const [loaderOpen, setLoaderOpen] = useState(false);\r\n    const { setMessage } = useContext(BannerContext);\r\n\r\n    const handleInputs = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const getTasks = async (e) => {\r\n        setLoaderOpen(true);\r\n        e.preventDefault();\r\n        const response = await posdarUrlInstance.get('/register', { headers: formData }).catch((err) => {\r\n            setMessage([\"#F8D7DA\", err.message || \"Something went wrong\"]);\r\n            setLoaderOpen(false);\r\n        });\r\n\r\n        if (response) {\r\n            props.setFatherTasks(response.data.tasks);\r\n            if (response.headers[\"access-token\"]) {\r\n                window.localStorage.setItem(\"at\", response.headers[\"access-token\"]);\r\n            }\r\n            setFormEnd(true);\r\n            setLoaderOpen(false);\r\n        }\r\n        setLoaderOpen(false);\r\n    }\r\n\r\n    if (formEnd) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <form id=\"getTasksForm\" onSubmit={getTasks}>\r\n            <h4>*You must be connected to see your tasks</h4>\r\n            <input name=\"user-name\" placeholder=\"User name\" onChange={handleInputs} required></input>\r\n\r\n            <input name=\"x-api-key\" placeholder=\"Api key\" onChange={handleInputs} required></input>\r\n\r\n            <br></br>\r\n            <button type=\"submit\" id=\"getButton\">\r\n                <Loader\r\n                    visible={loaderOpen}\r\n                    type=\"TailSpin\"\r\n                    color=\"#000000\"\r\n                    height={20}\r\n                    width={20}\r\n                    timeout={3000}\r\n                    style={{ display: \"inline\", marginRight: \"12px\" }}\r\n                />\r\n                Get\r\n            </button>\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\nexport default GetTasksForm;","import { createContext } from \"react\";\r\n\r\nexport const LoaderContext = createContext(false);","import React, { useContext } from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport './TaskCard.css';\r\nimport { LoaderContext } from \"../../context/LoaderContext\";\r\nimport { RiDeleteBin5Fill } from 'react-icons/ri';\r\n\r\nfunction TaskCard(props) {\r\n    const { LoaderC, setLoaderC } = useContext(LoaderContext);\r\n\r\n    const delTask = () => {\r\n            let at = window.localStorage.getItem(\"at\");\r\n            if (at) {\r\n                setLoaderC(props._id);\r\n                props.delTask(props._id);\r\n            }       \r\n            if (!at) console.error(\"ls item missing. please login again\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"TaskCard\">\r\n\r\n            {props.group\r\n                ? <>\r\n                    <p>Group:</p>\r\n                    <small>   {props.group}</small>\r\n                    <p>Text:</p>\r\n                    {props.text.map(t => {\r\n                        return <small className=\"txt\">{t}</small>\r\n                    })}\r\n                    <p>Email:</p> \r\n                    <small>  {props.email}</small>\r\n                    <p>Task-id:</p>\r\n                    <small>   {props._id}</small>\r\n                    <button className=\"dl-btn\" onClick={() => delTask()} >\r\n                        <Loader \r\n                        visible={LoaderC === props._id}\r\n                        type=\"TailSpin\"\r\n                        color=\"#000\"\r\n                        height={20}\r\n                        width={20}\r\n                        timeout={3000}\r\n                        style={{display: \"inline\", marginRight: \"12px\"}}\r\n                        /> <RiDeleteBin5Fill></RiDeleteBin5Fill> </button>\r\n                </>\r\n                : \r\n                <>\r\n                    <div className=\"emptyCard\">\r\n                        <small></small>\r\n                        <small></small>\r\n                        <small></small>\r\n                        <small></small>\r\n                        <small></small>\r\n                      \r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskCard;","import React, {useContext} from 'react';\r\nimport \"./Modal.css\";\r\nimport { LoaderContext } from \"../../context/LoaderContext\";\r\n\r\n\r\nfunction Modal(props) {\r\n    const { setLoaderC } = useContext(LoaderContext);\r\n\r\n    const conModal = () =>{\r\n        props.delEnd();\r\n        props.setOpenModal(false);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"modalBackground\">\r\n            <div className=\"modalContainer\">\r\n                <div className=\"titleCloseBtn\">\r\n                    <button\r\n                        onClick={() => {\r\n                            props.setOpenModal(false);\r\n                            setLoaderC(false);\r\n                        }}\r\n                    >\r\n                       \r\n                    </button>\r\n                </div>\r\n                <div className=\"modalTitle\">\r\n                    <p>{props.title}</p>\r\n                </div>\r\n                <div className=\"modalFooter\">\r\n                    <button\r\n                        onClick={() => {\r\n                            props.setOpenModal(false);\r\n                            setLoaderC(false);\r\n                        }}\r\n                        id=\"cancelBtn\"\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        onClick={() => {\r\n                           conModal();\r\n                        }}>\r\n                        Continue</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React, { useEffect, useState, useContext } from 'react';\r\nimport { posdarUrlInstance } from \"../../axios\";\r\nimport GetTasksForm from \"../../components/GetTasksForm/GetTasksForm\";\r\nimport TaskCard from '../../components/TaskCard/TaskCard';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport './TasksList.css';\r\nimport { BannerContext } from \"../../context/BannerContext\";\r\nimport { LoaderContext } from \"../../context/LoaderContext\";\r\n\r\nfunction TasksList(props) {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [del_id, setDel_id] = useState('');\r\n    const [deleted, setDeleted] = useState(false);\r\n    const { setMessage } = useContext(BannerContext);\r\n    const { setLoaderC } = useContext(LoaderContext);\r\n\r\n    useEffect(() => {\r\n        setDeleted(false);\r\n        let at = window.localStorage.getItem(\"at\");\r\n        if (at) {\r\n            (async () => {\r\n                setTasks([\" \"]);\r\n                const response = await posdarUrlInstance.get('/register', { headers: { \"x-access-token\": at } }).catch((err) => {\r\n                    console.log(err);\r\n                    setTasks([]);\r\n                    setMessage([\"#F8D7DA\", \"Something went wrong\"]);\r\n                    window.localStorage.removeItem(\"at\");\r\n                });\r\n\r\n                if (response) {\r\n                    setTasks(response.data.tasks);\r\n                }\r\n            })();\r\n        }\r\n    }, [deleted]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const delStart = async (_id) => {\r\n        setModalOpen(true);\r\n        setDel_id(_id);\r\n    }\r\n\r\n    const delEnd = async () => {\r\n        let at = window.localStorage.getItem(\"at\");\r\n        const response = await posdarUrlInstance.delete('/register',\r\n            {\r\n                headers: {\r\n                    \"t-id\": del_id,\r\n                    \"x-access-token\": at\r\n                }\r\n            }).catch((err) => {\r\n                setMessage([\"#F8D7DA\", \"Something went wrong\"]);\r\n                setLoaderC(false);\r\n            });\r\n\r\n        if (response) {\r\n            if (response.status === 200) {\r\n                setMessage([\"#F8D7DA\", \"Deleted\"]);\r\n                setTasks([]);\r\n                setDel_id('');\r\n                setDeleted(true);\r\n                setLoaderC(false);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const ifTasks = () => {\r\n        if (!tasks[0]) {\r\n            return (\r\n                <div id=\"TasksList\">\r\n                    <h2>Your Saved Tasks</h2>\r\n                    <GetTasksForm setFatherTasks={setTasks}></GetTasksForm>\r\n                    <TaskCard></TaskCard>\r\n                </div>)\r\n        }\r\n        if (tasks[0]) {\r\n            return (<div id=\"TasksList\">\r\n                <h2>Your Saved Tasks</h2>\r\n                {tasks.map((task) => (\r\n                    <TaskCard\r\n                        key={task._id}\r\n                        _id={task._id}\r\n                        date={task.date}\r\n                        group={task.group}\r\n                        email={task.email}\r\n                        text={task.text}\r\n                        delTask={delStart}\r\n                        setOpenModal={setModalOpen}\r\n                    ></TaskCard>\r\n                ))}\r\n                {modalOpen && <Modal setOpenModal={setModalOpen} delEnd={delEnd} title={\"Are You Sure?\"} />}\r\n            </div>)\r\n        }\r\n    }\r\n\r\n    return (ifTasks());\r\n};\r\n\r\nexport default TasksList;","import React, { useContext, useEffect, useState } from 'react';\r\nimport './NoMatch.css';\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <div id=\"NoMatch\">\r\n      <h1>Nothing Here</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;","import { useState, useEffect } from 'react';\nimport { posdarUrlInstance } from \"../axios\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport './App.css';\nimport Header from \"../components/Header/Header\";\nimport Banner from \"../components/Banner/Banner\";\nimport SaveTaskForm from \"../pages/SaveTaskForm/SaveTaskForm\";\nimport TasksList from \"../pages/TasksList/TasksList\";\nimport NoMatch from \"../pages/NoMatch/NoMatch\";\nimport Footer from \"../components/Footer/Footer\";\nimport { BannerContext } from \"../context/BannerContext\";\nimport { LoaderContext } from \"../context/LoaderContext\";\n\nfunction App() {\n  const [message, setMessage] = useState([\"darkgray\", \"\"]);\n  const [LoaderC, setLoaderC] = useState(false);\n  const [first, setFirst] = useState(true);\n\n  useEffect(() => {\n    if (first === true) init();\n  });\n  \n  function init() {\n    posdarUrlInstance.get('/').then((res) => {\n      if (res.status === 200) {\n        setMessage([\"D6D8D9\", \"server is on\"]);\n        setFirst(false);\n      }\n    }).catch((err) => {\n      console.log(err)\n      setMessage([\"#F8D7DA\", \"server error\"]);\n      setFirst(false);\n    });\n\n  }\n\n  return (\n    <BannerContext.Provider value={{ message, setMessage }}>\n      <LoaderContext.Provider value={{ LoaderC, setLoaderC }}>\n        <Router>\n          <div className=\"App\">\n            <Header></Header>\n            <Switch>\n              <Route exact path=\"/\">\n                <SaveTaskForm></SaveTaskForm>\n              </Route>\n              <Route exact path=\"/list\">\n                <TasksList></TasksList>\n              </Route>\n              <Route path=\"*\">\n                <NoMatch />\n              </Route>\n            </Switch>\n            <Banner></Banner>\n            {/* <Footer></Footer> */}\n          </div>\n        </Router>\n      </LoaderContext.Provider>\n    </BannerContext.Provider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}