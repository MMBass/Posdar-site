{"version":3,"sources":["axios.js","components/Nav/Nav.js","components/Header/Header.js","BannerContext.js","components/Banner/Banner.js","pages/SaveTaskForm/SaveTaskForm.js","components/GetTasksForm/GetTasksForm.js","components/TaskCard/TaskCard.js","pages/TasksList/TasksList.js","pages/NoMatch/NoMatch.js","components/Footer/Footer.js","App/App.js","reportWebVitals.js","index.js"],"names":["posdarUrlInstance","axios","create","baseURL","headers","Nav","id","to","className","Header","BannerContext","createContext","Banner","useContext","message","setMessage","closeBanner","useEffect","setTimeout","length","style","backgroundColor","onClick","SaveTaskForm","useState","formData","setFormData","wordsList","setWordsList","inputList","setInputList","loaderOpen","setLoaderOpen","handleInputs","e","target","name","value","saveTask","a","preventDefault","post","apiKey","userName","catch","err","response","handleReset","status","data","Array","from","document","querySelectorAll","forEach","input","onSubmit","placeholder","onChange","required","disabled","type","map","x","i","newList","text","handleWordsList","visible","color","height","width","timeout","display","marginRight","GetTasksForm","props","formEnd","setFormEnd","getTasks","get","console","log","setFatherTasks","tasks","window","localStorage","setItem","TaskCard","taskEnd","setTaskEnd","delTask","at","getItem","delete","_id","group","t","email","TasksList","setTasks","removeItem","task","date","onOpenModal","NoMatch","Footer","Modal","setAppElement","modalStyles","content","top","left","right","bottom","transform","textAlign","App","first","setFirst","modalIsOpen","setIsOpen","closeModal","then","res","Provider","exact","path","isOpen","onAfterOpen","onRequestClose","contentLabel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8ff96e11.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const posdarUrlInstance = axios.create({\r\n    baseURL: 'https://posdar.herokuapp.com',\r\n    // baseURL: 'http://localhost:5000',\r\n    headers: {'X-Custom-Header': 'foobar'}\r\n});","import {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport './Nav.css';\r\n\r\nfunction Nav() {\r\n\r\n    return (\r\n        <nav id=\"Nav\">\r\n            <Link to=\"/\" className=\"links\">Add Task</Link>\r\n            <Link to=\"/list\" className=\"links\">Tasks List</Link>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import { useState } from 'react';\r\nimport './Header.css';\r\nimport Nav from \"../Nav/Nav\";\r\n\r\nfunction Header() {\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Posdar</h1>\r\n      <Nav></Nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import { createContext } from \"react\";\r\n\r\nexport const BannerContext = createContext([\"darkgray\",\"\"]);","import React, { useContext, useEffect, useState } from 'react';\r\nimport './Banner.css';\r\nimport { BannerContext } from \"../../BannerContext\";\r\n\r\nfunction Banner() {\r\n  const { message, setMessage } = useContext(BannerContext);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      closeBanner();\r\n    }, 3000);\r\n  });\r\n\r\n  function closeBanner() {\r\n    setMessage([\"darkgray\", \"\"]);\r\n  }\r\n\r\n  if (message[1].length < 1) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div id=\"Banner\" style={{ backgroundColor: message[0] }}>\r\n      <strong onClick={() => closeBanner()}>X</strong>\r\n      <p>{message[1]}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;","import { useState, useContext } from 'react';\r\nimport { posdarUrlInstance } from \"../../axios\";\r\nimport { BannerContext } from \"../../BannerContext\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport './SaveTaskForm.css';\r\n\r\nfunction SaveTaskForm() {\r\n    const [formData, setFormData] = useState([]);\r\n    const [wordsList, setWordsList] = useState([]);\r\n    const [inputList, setInputList] = useState([\"\"]);\r\n    const [loaderOpen, setLoaderOpen] = useState(false);\r\n    const { message, setMessage } = useContext(BannerContext);\r\n\r\n    const addInput = () => {\r\n        setInputList([...inputList, \"\"]);\r\n    };\r\n\r\n    const handleInputs = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const handleWordsList = (e, i) => {\r\n        const newList = wordsList;\r\n        newList[i] = e.target.value;\r\n        setWordsList(newList);\r\n        setFormData({ ...formData, text: wordsList });\r\n    }\r\n\r\n    const saveTask = async (e) => {\r\n        e.preventDefault();\r\n        setLoaderOpen(true);\r\n        const response = await posdarUrlInstance.post('/register', formData, {\r\n            headers: {\r\n                \"x-api-key\": formData.apiKey,\r\n                \"user-name\": formData.userName\r\n            }\r\n        })\r\n            .catch((err) => {\r\n                setMessage([\"#ff5e5e\", \"Something went wrong\"]);\r\n            });\r\n\r\n        if (response) {\r\n            handleReset();\r\n            if (response.status === 200) {\r\n                setMessage([\"#e48ff1\", response.data.message]);\r\n            } else {\r\n                setMessage([\"darkgray\", response.data.message]);\r\n            }\r\n        }\r\n        setLoaderOpen(false);\r\n    }\r\n\r\n    const handleReset = () => {\r\n        Array.from(document.querySelectorAll(\"#saveTasksForm input\")).forEach(\r\n          input => (input.value = \"\")\r\n        );\r\n        setFormData([]);\r\n      };\r\n\r\n    return (\r\n        <form id=\"saveTasksForm\" onSubmit={saveTask}>\r\n            <h2>Add task</h2>\r\n            <input name=\"userName\" placeholder=\"User name\" onChange={handleInputs} required></input>\r\n\r\n            <input name=\"group\" placeholder=\"Group ID\" onChange={handleInputs} required></input>\r\n\r\n            <input name=\"apiKey\" placeholder=\"Api key\" onChange={handleInputs} required></input>\r\n\r\n            <input name=\"email\" placeholder=\"Email\" onChange={handleInputs} required></input>\r\n\r\n            <input name=\"time\" placeholder=\"Time between requests\" onChange={handleInputs} disabled></input>\r\n\r\n            <h4>What to look for?</h4>\r\n\r\n            <div id=\"add-text-div\">\r\n                <p> Add another text </p>\r\n                <button type=\"button\" onClick={addInput}>+</button>\r\n            </div>\r\n            <p id=\"must\">* accepts letters or numbers</p>\r\n            {inputList.map((x, i) => {\r\n                return (\r\n                    <input name={\"text\" + (i + 1)} placeholder={\"Text \" + (i + 1)} key={i} onChange={e => handleWordsList(e, i)}></input>\r\n                );\r\n            })}\r\n\r\n            <br></br>\r\n            <button type=\"submit\" id=\"submitButton\"> \r\n                     <Loader \r\n                        visible={loaderOpen}\r\n                        type=\"TailSpin\"\r\n                        color=\"#000000\"\r\n                        height={20}\r\n                        width={20}\r\n                        timeout={3000}\r\n                        style={{display: \"inline\", marginRight: \"12px\"}}\r\n                     />  \r\n                     Save\r\n            </button>\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\nexport default SaveTaskForm;","import { useState,useContext } from 'react';\r\nimport {posdarUrlInstance} from \"../../axios\";\r\nimport {BannerContext} from \"../../BannerContext\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport './GetTasksForm.css';\r\n\r\nfunction GetTasksForm(props) {\r\n    const [formData, setFormData] = useState([]);\r\n    const [formEnd, setFormEnd] = useState(false);\r\n    const [loaderOpen, setLoaderOpen] = useState(false);\r\n    const {message, setMessage} = useContext(BannerContext);\r\n    \r\n    const handleInputs = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const getTasks = async (e) => {\r\n        setLoaderOpen(true);\r\n        e.preventDefault();\r\n        const response = await posdarUrlInstance.get('/register', {headers:formData}).catch((err) => {\r\n            console.log(err);\r\n            setMessage([\"#ff5e5e\",\"Something went wrong\"]);\r\n        });\r\n        \r\n        if(response){\r\n           props.setFatherTasks(response.data.tasks);\r\n           if(response.headers[\"access-token\"]){\r\n            window.localStorage.setItem(\"at\",response.headers[\"access-token\"]);\r\n           }\r\n           setFormEnd(true);\r\n        }\r\n        setLoaderOpen(false);\r\n    }\r\n\r\n    if(formEnd){\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <form id=\"getTasksForm\" onSubmit={getTasks}>\r\n            <h4>*You must be connected to see the your tasks</h4>\r\n            <input name=\"user-name\" placeholder=\"User name\" onChange={handleInputs}></input>\r\n\r\n            <input name=\"x-api-key\" placeholder=\"Api key\" onChange={handleInputs}></input>\r\n\r\n            <br></br>\r\n            <button type=\"submit\" id=\"getButton\">\r\n                <Loader \r\n                    visible={loaderOpen}\r\n                    type=\"TailSpin\"\r\n                    color=\"#000000\"\r\n                    height={20}\r\n                    width={20}\r\n                    timeout={3000}\r\n                    style={{display: \"inline\", marginRight: \"12px\"}}\r\n                    />\r\n                    Get\r\n            </button>\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\nexport default GetTasksForm;","import React, { useState, useContext } from 'react';\r\nimport { posdarUrlInstance } from \"../../axios\";\r\nimport { BannerContext } from \"../../BannerContext\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport './TaskCard.css';\r\n\r\nfunction TaskCard(props) {\r\n    const [taskEnd, setTaskEnd] = useState(false);\r\n    const [loaderOpen, setLoaderOpen] = useState(false);\r\n    const { message, setMessage } = useContext(BannerContext);\r\n\r\n    const delTask = async () => {\r\n        let at = window.localStorage.getItem(\"at\");\r\n        setLoaderOpen(true);\r\n        if (at) {\r\n            const response = await posdarUrlInstance.delete('/register',\r\n                {\r\n                    headers: {\r\n                        \"t-id\": props._id,\r\n                        \"x-access-token\": at\r\n                    }\r\n                }).catch((err) => {\r\n                    setMessage([\"#ff5e5e\", \"Something went wrong\"]);\r\n                });\r\n\r\n            if (response) {\r\n                if (response.status == 200) {\r\n                    setMessage([\"#ff5e5e\", \"Deleted\"]);\r\n                    setTaskEnd(true);\r\n                }\r\n            }\r\n        }\r\n        if (!at) console.log(\"ls item missing. please login again\");\r\n        setLoaderOpen(true);\r\n    }\r\n\r\n    if (taskEnd === true) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"TaskCard\">\r\n\r\n            {props.group\r\n                ? <>\r\n                    <p>Group: {props.group}</p>\r\n                    <p>Text:</p>\r\n                    {props.text.map(t => {\r\n                        return <small className=\"txt\">{t}</small>\r\n                    })}\r\n                    <small>Email: {props.email}</small>\r\n                    <small>Task-id: {props._id}</small>\r\n                    <button className=\"dl-btn\" onClick={() => delTask()}>\r\n                        <Loader \r\n                        visible={loaderOpen}\r\n                        type=\"TailSpin\"\r\n                        color=\"#000000\"\r\n                        height={20}\r\n                        width={20}\r\n                        timeout={3000}\r\n                        style={{display: \"inline\", marginRight: \"12px\"}}\r\n                        />  DELETE</button>\r\n                </>\r\n                : <>\r\n                    <div className=\"emptyCard\">\r\n                        <p></p>\r\n                        <p></p>\r\n                        <p></p>\r\n                        <small></small>\r\n                        <small></small>\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskCard;","import React, { useEffect, useState, useContext } from 'react';\r\nimport { posdarUrlInstance } from \"../../axios\";\r\nimport GetTasksForm from \"../../components/GetTasksForm/GetTasksForm\";\r\nimport TaskCard from '../../components/TaskCard/TaskCard';\r\nimport {BannerContext} from \"../../BannerContext\";\r\nimport './TasksList.css';\r\n\r\nfunction TasksList(props) {\r\n    const [tasks, setTasks] = useState([]);\r\n    const {message, setMessage} = useContext(BannerContext);\r\n\r\n    useEffect(async () => {\r\n        let at = window.localStorage.getItem(\"at\");\r\n        if (at) {\r\n            setTasks([\" \"]);\r\n            const response = await posdarUrlInstance.get('/register', { headers: {\"x-access-token\":at} }).catch((err) => {\r\n                console.log(err);\r\n                setTasks([]);\r\n                setMessage([\"#ff5e5e\", \"Something went wrong\"]);\r\n                window.localStorage.removeItem(\"at\");\r\n            });\r\n\r\n            if (response) {\r\n                setTasks(response.data.tasks);\r\n            }\r\n        }\r\n    },[]);\r\n\r\n    const ifTasks = () => {\r\n        if (!tasks[0]) {\r\n            return (\r\n                <div id=\"TasksList\">\r\n                    <h2>Your Saved Tasks</h2>\r\n                    <GetTasksForm setFatherTasks={setTasks}></GetTasksForm> \r\n                    <TaskCard></TaskCard>\r\n                </div>)\r\n        }\r\n        if (tasks[0]) {\r\n            return (<div id=\"TasksList\">\r\n                <h2>Your Saved Tasks</h2>\r\n                {tasks.map((task) => (\r\n                    <TaskCard\r\n                        key={task._id}\r\n                        _id={task._id}\r\n                        date={task.date}\r\n                        group={task.group}\r\n                        email={task.email}\r\n                        text={task.text}\r\n                        onOpenModal={props.onOpenModal}\r\n                    ></TaskCard>\r\n                ))}\r\n            </div>)\r\n        }\r\n    }\r\n\r\n    return (ifTasks());\r\n};\r\n\r\nexport default TasksList;","import React, { useContext, useEffect, useState } from 'react';\r\nimport './NoMatch.css';\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <div id=\"NoMatch\">\r\n      <h1>Nothing Here</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;","import { useState } from 'react';\r\nimport './Footer.css';\r\n\r\nfunction Footer() {\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import { useState, useEffect } from 'react';\nimport { posdarUrlInstance } from \"../axios\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Modal from 'react-modal';\n\nimport './App.css';\nimport Header from \"../components/Header/Header\";\nimport Banner from \"../components/Banner/Banner\";\nimport SaveTaskForm from \"../pages/SaveTaskForm/SaveTaskForm\";\nimport TasksList from \"../pages/TasksList/TasksList\";\nimport NoMatch from \"../pages/NoMatch/NoMatch\";\nimport Footer from \"../components/Footer/Footer\";\nimport { BannerContext } from \"../BannerContext\";\n\nModal.setAppElement('#root');\n\nconst modalStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '250px',\n    height: '200px',\n    textAlign: \"center\",\n  },\n};\n\nfunction App() {\n  const [message, setMessage] = useState([\"darkgray\", \"\"]);\n  const [first, setFirst] = useState(true);\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  function init() {\n    posdarUrlInstance.get('/').then((res) => {\n      if (res.status === 200) {\n        setMessage([\"darkgray\", \"server is on\"]);\n        setFirst(false);\n      }\n    }).catch((err) => {\n      console.log(err)\n      setMessage([\"#ff5e5e\", \"server error\"]);\n    });\n\n  }\n\n  useEffect(() => {\n    if (first === true) init();\n  }, []);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    console.log(\"after open\")\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return (\n    <BannerContext.Provider value={{ message, setMessage }}>\n      <Router>\n        <Header></Header>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\">\n              <SaveTaskForm></SaveTaskForm>\n            </Route>\n            <Route exact path=\"/list\">\n              <TasksList onOpenModal={openModal}></TasksList>\n            </Route>\n            <Route path=\"*\">\n              <NoMatch />\n            </Route>\n          </Switch>\n          <Banner></Banner>\n          <Modal\n            isOpen={modalIsOpen}\n            onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={modalStyles}\n            contentLabel=\"Example Modal\"\n          >\n            <h2>Are You Sure?</h2>\n            <button onClick={closeModal}>Cancel</button>\n            <button onClick={closeModal}>Yes</button>\n          </Modal>\n          <Footer></Footer>\n        </div>\n      </Router>\n    </BannerContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}