{"version":3,"sources":["axios.js","components/Header/Header.js","BannerContext.js","components/Banner/Banner.js","components/SaveTaskForm/SaveTaskForm.js","components/Footer/Footer.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["posdarUrlInstance","axios","create","baseURL","headers","Header","className","BannerContext","createContext","Banner","useContext","message","setMessage","length","id","style","backgroundColor","onClick","SaveTaskForm","useState","formData","setFormData","wordsList","setWordsList","inputList","setInputList","handleInputs","e","target","name","value","saveTask","a","preventDefault","post","catch","err","console","log","response","status","data","onSubmit","placeholder","onChange","disabled","type","map","x","i","newList","text","handleWordsList","Footer","App","first","setFirst","useEffect","get","then","res","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cabce84.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const posdarUrlInstance = axios.create({\r\n    baseURL: 'https://posdar.herokuapp.com',\r\n    // baseURL: 'http://localhost:5000',\r\n    headers: {'X-Custom-Header': 'foobar'}\r\n});","import { useState } from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Posdar</h1>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import { createContext } from \"react\";\r\n\r\nexport const BannerContext = createContext([\"darkgray\",\"\"]);","import React, { useContext, useState } from 'react';\r\nimport './Banner.css';\r\nimport {BannerContext} from \"../../BannerContext\";\r\n\r\nfunction Banner() {\r\n  const {message, setMessage} = useContext(BannerContext);\r\n  \r\n  if(message[1].length < 1){\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div id=\"Banner\" style={{backgroundColor:message[0]}}>\r\n          <strong onClick={()=>setMessage([\"darkgray\",\"\"])}>X</strong> \r\n          <p>{message[1]}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;","import { useState,useContext } from 'react';\r\nimport {posdarUrlInstance} from \"../../axios\";\r\nimport {BannerContext} from \"../../BannerContext\";\r\nimport './SaveTaskForm.css';\r\n\r\nfunction SaveTaskForm() {\r\n    const [formData, setFormData] = useState([]);\r\n    const [wordsList, setWordsList] = useState([]);\r\n    const [inputList, setInputList] = useState([\"\"]);\r\n    const {message, setMessage} = useContext(BannerContext);\r\n\r\n    const addInput = () => {\r\n        setInputList([...inputList, \"\"]);\r\n    };\r\n\r\n    const handleInputs = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const handleWordsList = (e, i) => {\r\n        const newList = wordsList;\r\n        newList[i] = e.target.value;\r\n        setWordsList(newList);\r\n        setFormData({ ...formData, text: wordsList });\r\n    }\r\n\r\n    const saveTask = async (e) => {\r\n        e.preventDefault();\r\n        const response = await posdarUrlInstance.post('/register', formData).catch((err) => {\r\n            console.log(err)\r\n            setMessage([\"#ff5e5e\",\"Something went wrong\"]);\r\n        });\r\n        \r\n        if(response){\r\n            if (response.status === 200) {\r\n                setMessage([\"#e48ff1\",response.data.message]);\r\n            }else{\r\n                setMessage([\"darkgray\",response.data.message]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={saveTask}>\r\n            <h3>Add task</h3>\r\n            <input name=\"userName\" placeholder=\"User name\" onChange={handleInputs}></input>\r\n\r\n            <input name=\"email\" placeholder=\"Email\" onChange={handleInputs}></input>\r\n\r\n            <input name=\"group\" placeholder=\"Group ID\" onChange={handleInputs}></input>\r\n\r\n            <input name=\"token\" placeholder=\"Api key\" onChange={handleInputs}></input>\r\n\r\n            <input name=\"time\" placeholder=\"Time between requests\" onChange={handleInputs} disabled></input>\r\n\r\n            <h4>Word/s to search:</h4>\r\n\r\n            <div id=\"add-text-div\">\r\n                <p> add another text </p>\r\n                <button type=\"button\" onClick={addInput}>+</button>\r\n            </div>\r\n            <p id=\"must\">*must contain only letters or numbers</p>\r\n            {inputList.map((x, i) => {\r\n                return (\r\n                    <input name={\"text\" + (i + 1)} placeholder={\"Text \" + (i + 1)} key={i} onChange={e => handleWordsList(e, i)}></input>\r\n                );\r\n            })}\r\n\r\n            <br></br>\r\n            <button type=\"submit\" id=\"submitButton\">Save</button>\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\nexport default SaveTaskForm;","import { useState } from 'react';\r\nimport './Footer.css';\r\n\r\nfunction Footer() {\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import { useState, useEffect, useContext} from 'react';\nimport { posdarUrlInstance } from \"../../axios\";\nimport './App.css';\nimport Header from \"../Header/Header\";\nimport Banner from \"../Banner/Banner\";\nimport SaveTaskForm from \"../SaveTaskForm/SaveTaskForm\";\nimport Footer from \"../Footer/Footer\";\nimport {BannerContext} from \"../../BannerContext\";\n\nfunction App() {\n  const [message, setMessage] = useState([\"darkgray\",\"\"]);\n  const [first, setFirst] = useState(true);\n\n  function init() {\n    posdarUrlInstance.get('/').then((res) => {\n      if (res.status === 200) {\n        setMessage([\"darkgray\",\"server is on\"]);\n        setFirst(false);\n      }\n    }).catch((err) => {\n      console.log(err)\n      setMessage([\"#ff5e5e\",\"server error\"]);\n    });\n\n  }\n\n  useEffect(() => {\n    if(first === true) init();\n  });\n\n  return (\n    <BannerContext.Provider value={{message, setMessage}}>\n      <div className=\"App\">\n        <Header></Header>\n        <Banner></Banner>\n        <SaveTaskForm></SaveTaskForm>\n        <Footer></Footer>\n      </div>\n    </BannerContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}