{"version":3,"sources":["components/Header/Header.js","components/Alert/Alert.js","axios.js","components/SaveTaskForm/SaveTaskForm.js","components/Footer/Footer.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","className","Alert","useState","alert","localhostInstance","axios","create","baseURL","headers","SaveTaskForm","formData","setFormData","wordsList","setWordsList","inputList","setInputList","handleInputs","e","target","name","value","saveTask","a","preventDefault","post","catch","err","console","log","onSubmit","placeholder","onChange","disabled","id","type","onClick","map","x","i","newList","text","handleWordsList","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAaeA,MAVf,WAEE,OACE,qBAAKC,UAAU,SAAf,SACE,2C,aCOSC,MAXf,WAEE,MAA0BC,qBAA1B,mBAAOC,EAAP,KAEA,OAFA,KAGE,qBAAKH,UAAU,QAAf,SACM,4BAAIG,O,sDCPDC,E,OAAoBC,EAAMC,OAAO,CAC1CC,QAAS,+BACTC,QAAS,CAAC,kBAAmB,Y,MCmElBC,MAnEf,WACI,MAAgCP,mBAAS,IAAzC,mBAAOQ,EAAP,KAAiBC,EAAjB,KACA,EAAkCT,mBAAS,IAA3C,mBAAOU,EAAP,KAAkBC,EAAlB,KACA,EAAkCX,mBAAS,CAAC,KAA5C,mBAAOY,EAAP,KAAkBC,EAAlB,KAMMC,EAAe,SAACC,GAClBN,EAAY,2BAAKD,GAAN,kBAAiBO,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAUnDC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACbL,EAAEM,iBADW,SAEUnB,EAAkBoB,KAAK,YAAad,GAAUe,OAAM,SAACC,GACxEC,QAAQC,IAAIF,MAHH,yDAAH,sDAad,OACI,uBAAMG,SAAUR,EAAhB,UACI,0CACA,uBAAOF,KAAK,WAAWW,YAAY,YAAYC,SAAUf,IAEzD,uBAAOG,KAAK,QAAQW,YAAY,QAAQC,SAAUf,IAElD,uBAAOG,KAAK,QAAQW,YAAY,WAAWC,SAAUf,IAErD,uBAAOG,KAAK,QAAQW,YAAY,UAAUC,SAAUf,IAEpD,uBAAOG,KAAK,OAAOW,YAAY,wBAAwBC,SAAUf,EAAcgB,UAAQ,IAEvF,mDAEA,sBAAKC,GAAG,eAAR,UACI,mDACA,wBAAQC,KAAK,SAASC,QA7CjB,WACbpB,EAAa,GAAD,mBAAKD,GAAL,CAAgB,OA4CpB,kBAEHA,EAAUsB,KAAI,SAACC,EAAGC,GACf,OACI,uBAAOnB,KAAM,QAAUmB,EAAI,GAAIR,YAAa,SAAWQ,EAAI,GAAYP,SAAU,SAAAd,GAAC,OAzC1E,SAACA,EAAGqB,GACxB,IAAMC,EAAU3B,EAChB2B,EAAQD,GAAKrB,EAAEC,OAAOE,MACtBP,EAAa0B,GACb5B,EAAY,2BAAKD,GAAN,IAAgB8B,KAAM5B,KAqCiE6B,CAAgBxB,EAAGqB,KAArCA,MAI5E,uBACA,uBACA,uBACA,wBAAQJ,KAAK,SAAb,sB,MCrDGQ,MATf,WAEE,OACE,qBAAK1C,UAAU,YCgBJ2C,MAff,WAKE,OACE,sBAAK3C,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCLO4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4f0d1771.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Posdar</h1>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import { useState } from 'react';\r\nimport './Alert.css';\r\n\r\nfunction Alert() {\r\n\r\n  const [alert, setAlert] = useState();\r\n\r\n  return (\r\n    <div className=\"Alert\">\r\n          <p>{alert}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;","import axios from \"axios\";\r\n\r\nexport const localhostInstance = axios.create({\r\n    baseURL: 'https://posdar.herokuapp.com',\r\n    headers: {'X-Custom-Header': 'foobar'}\r\n});","import { useState } from 'react';\r\nimport {localhostInstance} from \"../../axios\";\r\nimport './SaveTaskForm.css';\r\n\r\nfunction SaveTaskForm() {\r\n    const [formData, setFormData] = useState([]);\r\n    const [wordsList, setWordsList] = useState([]);\r\n    const [inputList, setInputList] = useState([\"\"]);\r\n\r\n    const addInput = () => {\r\n        setInputList([...inputList, \"\"]);\r\n    };\r\n\r\n    const handleInputs = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const handleWordsList = (e, i) => {\r\n        const newList = wordsList;\r\n        newList[i] = e.target.value;\r\n        setWordsList(newList);\r\n        setFormData({ ...formData, text: wordsList });\r\n    }\r\n\r\n    const saveTask = async (e) => {\r\n        e.preventDefault();\r\n        const response = await localhostInstance.post('/register', formData).catch((err) => {\r\n            console.log(err)\r\n            // setAlert(\"Something went wrong\");\r\n        });\r\n\r\n        if (response) {\r\n            // setAlert(response.data);\r\n            // \"Task Added sucsseccfully\"// TODO add message to server response;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={saveTask}>\r\n            <h3>Add task</h3>\r\n            <input name=\"userName\" placeholder=\"User name\" onChange={handleInputs}></input>\r\n\r\n            <input name=\"email\" placeholder=\"Email\" onChange={handleInputs}></input>\r\n\r\n            <input name=\"group\" placeholder=\"Group ID\" onChange={handleInputs}></input>\r\n\r\n            <input name=\"token\" placeholder=\"Api key\" onChange={handleInputs}></input>\r\n\r\n            <input name=\"time\" placeholder=\"Time between requests\" onChange={handleInputs} disabled></input>\r\n\r\n            <h4>Word/s to search:</h4>\r\n\r\n            <div id=\"add-text-div\">\r\n                <p> add another text </p>\r\n                <button type=\"button\" onClick={addInput}>+</button>\r\n            </div>\r\n            {inputList.map((x, i) => {\r\n                return (\r\n                    <input name={\"text\" + (i + 1)} placeholder={\"Text \" + (i + 1)} key={i} onChange={e => handleWordsList(e, i)}></input>\r\n                );\r\n            })}\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <button type=\"submit\">Save</button>\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\nexport default SaveTaskForm;","import { useState } from 'react';\r\nimport './Footer.css';\r\n\r\nfunction Footer() {\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import { useState } from 'react';\nimport './App.css';\nimport Header from \"../Header/Header\";\nimport Alert from \"../Alert/Alert\";\nimport SaveTaskForm from \"../SaveTaskForm/SaveTaskForm\";\nimport Footer from \"../Footer/Footer\";\n\nfunction App() {\n\n  // const [task, setTask] = useState([]);\n  // const [alert, setAlert] = useState([]);\n\n  return (\n    <div className=\"App\">\n        <Header></Header>\n        <Alert></Alert>\n        <SaveTaskForm></SaveTaskForm>\n        <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}